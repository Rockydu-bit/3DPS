// COPYRIGHT Dassault Systemes 2015
//===================================================================
//
// CATReportForm.cpp
// Header definition of CATReportForm
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Oct 2015  Creation: Code generated by the CAA wizard  WANGJIAPENG
//===================================================================
#include "CATReportForm.h"
#include "CATICkeParmFactory.h"
#include "CATIDesignTable.h"
#include "CATICkeParm.h"
#include "CATCkeGlobalFunctions.h"
#include "CATICkeFunctionFactory.h"
#include "CATICkeSheet.h"
#include "CATInit.h"
 
CATImplementClass( CATReportForm,
                   Implementation, 
                   CATProcessFile,
                   CATNull );
 
//-----------------------------------------------------------------------------
// CATReportForm : constructor
//-----------------------------------------------------------------------------
CATReportForm::CATReportForm():
    CATProcessFile()
{
}

//-----------------------------------------------------------------------------
// CATReportForm : destructor
//-----------------------------------------------------------------------------
CATReportForm::~CATReportForm()
{
}

//-----------------------------------------------------------------------------
// CATReportForm : copy constructor
//-----------------------------------------------------------------------------
CATReportForm::CATReportForm(CATReportForm& original):
   CATProcessFile(original)
{
}
 
//-----------------------------------------------------------------------------
// CATReportForm : equal operator
//-----------------------------------------------------------------------------
CATReportForm& CATReportForm::operator=(CATReportForm& original)
{
   CATProcessFile::operator=(original);
   return *this;
}

CATBoolean CATReportForm::OutputExcel(CArray<CATPPRProcessModel*,CATPPRProcessModel*>& PPRProcessArray)
{
	HRESULT rc = S_OK;
	CATPPRProcess* pPPRProcess = CATPPRProcess::GetInstance();
	CATInit_var spInit = pPPRProcess->GetCurrentDocument();
	CATIContainer *cont = (CATIContainer*)spInit->GetRootContainer("CATIContainer");
	CATICkeParmFactory_var spFact = cont;
	CATIDesignTable_var spDesign=NULL_var;
	CATICkeSheet_var spCkeSheet=NULL_var;
	//写入xls
	CString strContent;
	CString strPath = GetProgramPath();
	strPath = strPath + _T("\\Settings.txt");
	CStdioFile fifFile(strPath,CFile::modeRead);
	fifFile.ReadString(strContent);
	fifFile.Close();
	strContent = strContent + _T("\\Excel\\Process.xls");
	spDesign=spFact->CreateDesignTable("Process","Process",pPPRProcess->ConvertToCATString(strContent));
	if (spDesign==NULL_var)
	{
		return FALSE;
	}
	spCkeSheet=spDesign->Sheet();
	if (spCkeSheet==NULL_var)
	{
		return FALSE;
	}
	spCkeSheet->SetCell(1,1,"工艺序号",1,0);
	spCkeSheet->SetCell(1,2,"工序名称",0,0);
	spCkeSheet->SetCell(1,3,"工序内容",0,0);
	CATUnicodeString num = NULL;
	for (int i=1; i<=PPRProcessArray.GetSize(); i++)
	{
		num.BuildFromNum(i,"%d");
		spCkeSheet->SetCell(i+1,1,num,0,0);
		spCkeSheet->SetCell(i+1,2,PPRProcessArray.GetAt(i-1)->ProcessName,0,0);
		spCkeSheet->SetCell(i+1,3,PPRProcessArray.GetAt(i-1)->ProcessContent,0,0);
	}

	return TRUE;
}

CATBoolean CATReportForm::OutputHtml(CArray<CATPPRProcessModel*,CATPPRProcessModel*>& PPRProcessArray)
{
	CString strContent;
	CString strPath = GetProgramPath();
	strPath = strPath + _T("\\Settings.txt");
	CStdioFile fifFile(strPath,CFile::modeRead);
	fifFile.ReadString(strContent);
	fifFile.Close();

	strContent = strContent + _T("\\Html\\Process.html");

	CStdioFile ReportFile(strContent, CFile::modeCreate|CFile::modeWrite);
	CString  strTemp;
	char* old_locale = _strdup( setlocale(LC_CTYPE,NULL) );
	setlocale( LC_CTYPE, "chs" );//设定

	ReportFile.WriteString(L"<HTML>\n");
	ReportFile.WriteString(L"<HEAD>\n");
	ReportFile.WriteString(L"<BODY BGCOLOR=\"#FFFFFF\">\n");
	ReportFile.WriteString(L"<HEAD>\n");

	ReportFile.WriteString(L"<BODY>\n");
	ReportFile.WriteString(L"<h2><div align=center>三维工艺<center></div>");// 标题
	ReportFile.WriteString(L"<hr>");

	ReportFile.WriteString(L"<H3><div align=center>");
	ReportFile.WriteString(L"<P> 工序列表：");
	ReportFile.WriteString(L"<P>");

	ReportFile.WriteString(L"<table border>");
	ReportFile.WriteString(L"<thead>");
	ReportFile.WriteString(L"<th>工艺序号</th>");
	ReportFile.WriteString(L"<th>工序名称</th>");
	ReportFile.WriteString(L"<th>工序内容</th>");
	ReportFile.WriteString(L"</thead>");
	ReportFile.WriteString(L"<tbody>");

	for (int i=0; i<PPRProcessArray.GetSize(); i++)
	{
		ReportFile.WriteString(L"<tr>");
		ReportFile.WriteString(L"<td align=\"center\">");
		ReportFile.WriteString(ConvertToCString(PPRProcessArray.GetAt(i)->ProcessNum));
		ReportFile.WriteString(L"</td>");

		ReportFile.WriteString(L"<td align=\"center\">");
		ReportFile.WriteString(ConvertToCString(PPRProcessArray.GetAt(i)->ProcessName));
		ReportFile.WriteString(L"</td>");

		ReportFile.WriteString(L"<td align=\"center\">");
		ReportFile.WriteString(ConvertToCString(PPRProcessArray.GetAt(i)->ProcessContent));
		ReportFile.WriteString(L"</td>");
		ReportFile.WriteString(L"</tr>");
	}

	ReportFile.WriteString(L"</table>");
	ReportFile.WriteString(L"<OBJECT name = \"atltest\" classid =\"clsid:AD5F3C4B-BD73-11D5-838B-0050042DF1E4\" width=600 height=500 ><PARAM name=\"AllowMenu\" value=1><PARAM name=\"Filename\" value=\"C:\\Users\\WANGJIAPENG\\Desktop\\J6-1.hsf\"></OBJECT>");

	return TRUE;
}
