// COPYRIGHT Dassault Systemes 2015
//===================================================================
//
// CATStringObject.h
// Header definition of CATStringObject
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Oct 2015  Creation: Code generated by the CAA wizard  WANGJIAPENG
//===================================================================
#ifndef CATStringObject_H
#define CATStringObject_H

#include "ObjectBaseMdl.h"
#include "CATPPRObject.h"
#include "CATUnicodeString.h"
#include "CATString.h"
#include "stdafx.h"

//-----------------------------------------------------------------------

/**
* Class representing xxx.
*
* <br><b>Role</b>: Provide the basic class function...
* <p>
* Do not use the @href CATStringObject constructor to
* do such and such but instead...
*
* @example
*  // example is optional
*  pObject = new CATStringObject;
*  pObject->SetXXX(...);
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class ExportedByObjectBaseMdl CATStringObject: public CATPPRObject
{
  CATDeclareClass;

  public:

  // Standard constructors and destructors
  // -------------------------------------
     CATStringObject ();
     virtual ~CATStringObject ();

public:
	static CATStringObject* GetInstance();
public:
	static CATStringObject* m_pStringObject;

  // Copy constructor and equal operator
  // -----------------------------------
  CATStringObject (CATStringObject &);
  CATStringObject& operator=(CATStringObject&);

  //转换为CString
  CString ConvertToCString(CATUnicodeString strTemp);
  //转换为CATUnicodeString
  CATUnicodeString ConvertToCATString(CString strTemp);
  //转换为char
  char *ConvertToChar(CString strTemp);
  //转换为CATString
  CATString ConvertToMultiByte(CString strTemp);
  //转换为int
  int ConvertToInt(CATUnicodeString strTemp);
  //宽字节字符转换为const char*
  char* ConvertMultiByteToChar(CString strTemp);
  //判断一个字符串是否存在于数组中
  CATBoolean CheckStringExist(CString strTemp,CArray<CString,CString>& strArray);

};

//-----------------------------------------------------------------------

#endif
