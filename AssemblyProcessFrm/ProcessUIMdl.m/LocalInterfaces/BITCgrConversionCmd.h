// COPYRIGHT Dassault Systemes 2015
//===================================================================
//
// BITCgrConversionCmd.h
// The state chart based command: BITCgrConversionCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//   STATECOMMAND
//End CAA2 Wizard Generation Report
//
//  Oct 2015  Creation: Code generated by the CAA wizard  WANGJIAPENG
//===================================================================
#ifndef BITCgrConversionCmd_H
#define BITCgrConversionCmd_H

#include "CATStateCommand.h"
#include "CATBoolean.h"
#include "CDlgBITCgrConversion.h"
#include "CATIProduct.h"
#include "CATInit.h"
#include "CATIPrtContainer.h"
#include "CATIPrtPart.h"
#include "CATIContainerOfDocument.h"
#include "CATIPrdProperties.h"
#include "CATPPRDocument.h"
#include "CATVBAScript.h"
#include "stdafx.h"
#include "shlwapi.h"
//----------------------------------------------------------------------
typedef struct _structCGRPartName
{
	CString m_strPartName;//当前零部件名称
	int count;//计数器，记录当前相同零部件名称的编号
	int num;//记录相同零部件的个数
}CGRPartName;
//----------------------------------------------------------------------

/**
 * Describe your command here.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 * <p>
 * refer to programming resources of Dialog engine framework.
 * (consult base class description).
 */
class BITCgrConversionCmd: public CATStateCommand
{
  // Allows customization/internationalization of command's messages
  // ---------------------------------------------------------------
  DeclareResource( BITCgrConversionCmd, CATStateCommand )

  public:

  BITCgrConversionCmd();
  virtual ~BITCgrConversionCmd();

    /**
     * Defines the command automata.
     * <br>
     * <i>(states, transitions and agents)</i>
     */
  virtual void     BuildGraph();

  CArray<CATIProduct_var,CATIProduct_var> ProductPointerArray;
  CArray<CString,CString> PartNameArray;

  CString strProductPath;
  //改为第一个零部件名称是否为0,当m_nCount为0时，采用零部件名称描述，当m_nCount为1时采用零部件的描述
  int m_nCount;
  //具有相同名称的零部件的集合
  CArray<CGRPartName*,CGRPartName*> CGRPartNameArray;
  //判断CgrConversion是否存在
  CATBoolean CheckFolderAndFile();
  //递归获取所有的Part的名称或描述
  CATBoolean GetPartNameArray(CArray<CATIProduct_var,CATIProduct_var> &ProductPointerArray);
  //获取具有相同名称的零部件
  CATBoolean GetCGRPartNameArray(CArray<CString,CString> &PartNameArray);
  //获取当前CATPart的名称
  CString GetPartName(CATIProduct_var spProduct);
  //检查字符串是否全是数字
  CATBoolean CheckNum(CString strPartName);
  //检查零部件名称是否重复
  CString CheckPartName(CString strPartName);
  //判断前者的名称是否包含后者
  CATBoolean CheckRelationship(CString strPartName1,CString strPartName2);
  //CGR批量转换
  void CGRConversion();

  virtual CATBoolean  ActionOK(void * data);
  virtual CATBoolean  ActionCancel(void * data);
  virtual CATBoolean  ActionClose(void * data);

  private:
	  CDlgBITCgrConversion		* pCgrConversion;
	  CATPPRDocument			* pDocument;
	  CATVBAScript				* pVBAScript;
	  CATDialogAgent			* pOkBut,
								* pCancelBut,
								* pCloseBut;
};

//----------------------------------------------------------------------

#endif
