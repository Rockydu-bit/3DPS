// COPYRIGHT Dassault Systemes 2015
//===================================================================
//
// CDlgModelViewer.cpp
// The dialog : CDlgModelViewer
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Oct 2015  Creation: Code generated by the CAA wizard  WANGJIAPENG
//===================================================================
#include "CDlgModelViewer.h"
#include "CATApplicationFrame.h"
#include "CATDlgGridConstraints.h"
#include "CATMsgCatalog.h"
#include "CATViewer.h"
#include "CATNavigation3DViewer.h"
#include "CAT3DBagRep.h"
#include "CATReadWriteCgr.h"
#include "shlwapi.h"

#ifdef CDlgModelViewer_ParameterEditorInclude
#include "CATIParameterEditorFactory.h"
#include "CATIParameterEditor.h"
#include "CATICkeParm.h"
#endif



CDlgModelViewer* CDlgModelViewer::m_pModelViewer = NULL;
//-------------------------------------------------------------------------
// Constructor
//-------------------------------------------------------------------------
CDlgModelViewer::CDlgModelViewer() :
  CATDlgDialog ((CATApplicationFrame::GetApplicationFrame())->GetMainWindow(),
//CAA2 WIZARD CONSTRUCTOR DECLARATION SECTION
"CDlgModelViewer",CATDlgWndBtnOKCancelPreview|CATDlgGridLayout
//END CAA2 WIZARD CONSTRUCTOR DECLARATION SECTION
                               )
{
//CAA2 WIZARD CONSTRUCTOR INITIALIZATION SECTION

//END CAA2 WIZARD CONSTRUCTOR INITIALIZATION SECTION
_pFile = new CATFile();
Count = 0;
Number = 0;
strNameArray.RemoveAll();
strPathArray.RemoveAll();
_pRootContainer = NULL;
flag = false;
}

//-------------------------------------------------------------------------
// Destructor
//-------------------------------------------------------------------------
CDlgModelViewer::~CDlgModelViewer()
{
//  Do not delete the control elements of your dialog: 
//     this is done automatically
//  --------------------------------------------------
//CAA2 WIZARD DESTRUCTOR DECLARATION SECTION

//END CAA2 WIZARD DESTRUCTOR DECLARATION SECTION
if (_pRootContainer)
{
	delete _pRootContainer;
	_pRootContainer= NULL;
}
if (_pViewer)
{
	delete _pViewer;
	_pViewer= NULL;
}
if (_pFile)
{
	delete _pFile;
	_pFile;
}
}

CDlgModelViewer* CDlgModelViewer::GetInstance()
{
	if (m_pModelViewer == NULL)
	{
		m_pModelViewer = new CDlgModelViewer();
	}
	return m_pModelViewer;//返回唯一的指针
}

void CDlgModelViewer::Build()
{
//  TODO: This call builds your dialog from the layout declaration file
//  -------------------------------------------------------------------

//CAA2 WIZARD WIDGET CONSTRUCTION SECTION
SetRectDimensions(1, 1, 150, 300);
//END CAA2 WIZARD WIDGET CONSTRUCTION SECTION
//修改窗体位置和大小
CATDlgWindow *pFrmWindow = NULL;
pFrmWindow = (CATApplicationFrame::GetApplicationFrame())->GetApplicationDocument();
DRECT rect;
pFrmWindow->GetRectDimensions(&rect);
int width = 600;
int height = 450;
this->SetRectDimensions(rect.dx-width,(rect.dy-height)/2,height,width);
//CAA2 WIZARD CALLBACK DECLARATION SECTION
     AddAnalyseNotificationCB (this, 
                               GetDiaPREVIEWNotification(),
                               (CATCommandMethod)&CDlgModelViewer::OnCDlgModelViewerDiaPREVIEWNotification,
                               NULL);
     AddAnalyseNotificationCB (this, 
                               GetWindCloseNotification(),
                               (CATCommandMethod)&CDlgModelViewer::OnCDlgModelViewerDiaCLOSENotification,
                               NULL);
     AddAnalyseNotificationCB (this, 
                               GetDiaCANCELNotification(),
                               (CATCommandMethod)&CDlgModelViewer::OnCDlgModelViewerDiaCANCELNotification,
                               NULL);
     AddAnalyseNotificationCB (this, 
                               GetDiaOKNotification(),
                               (CATCommandMethod)&CDlgModelViewer::OnCDlgModelViewerDiaOKNotification,
                               NULL);
//END CAA2 WIZARD CALLBACK DECLARATION SECTION

}

CATBoolean CDlgModelViewer::CheckCgrModel(CString strName)
{
	CString strContent;
	CString strPath = _pFile->GetProgramPath();
	strPath = strPath + _T("\\Settings.txt");
	CStdioFile fifFile(strPath,CFile::modeRead);
	fifFile.ReadString(strContent);
	fifFile.Close();
	//以上获取当前工程的目录
	strFilePath = strContent + _T("\\Model\\") + strName;
	if (!PathFileExists(strContent))
	{
		AfxMessageBox(_T("请先保存工序模型！"));
		return FALSE;
	}
	CString string = strFilePath + _T("\\*.cgr");
	Count = _pFile->GetFileCount(string,strPathArray,strNameArray);
	//以上获取当前文件夹下的模型数量
	if (Count == 0)
	{
		AfxMessageBox(_T("请先保存工序模型！"));
		return FALSE;
	}

	return TRUE;
}

CATBoolean CDlgModelViewer::ProcessModelReview(CString strProcessName)
{
	if (!CheckCgrModel(strProcessName))
	{
		return FALSE;
	}
	m_pModelViewer->Build();
	m_pModelViewer->SetVisibility(CATDlgShow);
	if (Count == 1)
	{
		this->SetOKSensitivity(CATDlgDisable);
		this->SetCANCELSensitivity(CATDlgDisable);
	}
	if (Count > 1)
	{
		this->SetOKSensitivity(CATDlgDisable);
		this->SetCANCELSensitivity(CATDlgEnable);
	}
	ReviewModel(strNameArray.GetAt(0));

	return TRUE;
}

CATBoolean CDlgModelViewer::ReviewModel(CString str)
{
	if (!flag)
	{
		_pViewer = new CATNavigation3DViewer(this,"3DViewer",CATDlgFraNoTitle | CATDlgFraNoFrame,600,400);
		Attach4Sides(_pViewer);
		flag = true;
	}
	char *_pFileToOpen;
	CString strTemp = strFilePath + _T("\\") + str;
	_pFileToOpen = _pFile->ConvertMultiByteToChar(strTemp);
	if (NULL != _pRootContainer)
	{
		_pViewer->RemoveRep(_pRootContainer);
		_pRootContainer->Destroy();
	}
	CAT3DBagRep *pRep;
	pRep = new CAT3DBagRep();
	CAT3DBagRep *cgr = (CAT3DBagRep*)::CATReadCgr((char *)_pFileToOpen,USE_LODS_TEXTURE_EDGE);
	if(cgr)
	{
		pRep->AddChild(*cgr);
		_pRootContainer = pRep;
	}
	_pViewer->AddRep(pRep);
	_pViewer->Reframe();

	return TRUE;
}

//-------------------------------------------------------------------------
// Callback on DiaOK of _CDlgModelViewer
//-------------------------------------------------------------------------
void CDlgModelViewer::OnCDlgModelViewerDiaOKNotification(CATCommand* cmd, CATNotification* evt, CATCommandClientData data)
{
  // Add your code here
	Number--;
	ReviewModel(strNameArray.GetAt(Number));
	if (Number <= 1)
	{
		this->SetOKSensitivity(CATDlgDisable);
	}
	if (Number >= 2)
	{
		this->SetOKSensitivity(CATDlgEnable);
	}
	this->SetCANCELSensitivity(CATDlgEnable);
}


//-------------------------------------------------------------------------
// Callback on DiaCANCEL of _CDlgModelViewer
//-------------------------------------------------------------------------
void CDlgModelViewer::OnCDlgModelViewerDiaCANCELNotification(CATCommand* cmd, CATNotification* evt, CATCommandClientData data)
{
  // Add your code here
	Number++;
	ReviewModel(strNameArray.GetAt(Number));
	if (Number < Count-1)
	{
		this->SetCANCELSensitivity(CATDlgEnable);
	}
	if (Number >= Count-1)
	{
		this->SetCANCELSensitivity(CATDlgDisable);
	}
	this->SetOKSensitivity(CATDlgEnable);
}

//-------------------------------------------------------------------------
// Callback on DiaCLOSE of _CDlgModelViewer
//-------------------------------------------------------------------------
void CDlgModelViewer::OnCDlgModelViewerDiaCLOSENotification(CATCommand* cmd, CATNotification* evt, CATCommandClientData data)
{
  // Add your code here
	if (m_pModelViewer)
	{
		m_pModelViewer->RequestDelayedDestruction();
		m_pModelViewer = NULL;
	}
}


//-------------------------------------------------------------------------
// Callback on DiaPREVIEW of _CDlgModelViewer
//-------------------------------------------------------------------------
void CDlgModelViewer::OnCDlgModelViewerDiaPREVIEWNotification(CATCommand* cmd, CATNotification* evt, CATCommandClientData data)
{
  // Add your code here
	_pFile->DeletePathFile(strPathArray.GetAt(Number));
	strNameArray.RemoveAt(Number);
	if (strNameArray.GetSize() == 0)
	{
		ReviewModel(_T(""));
		this->SetOKSensitivity(CATDlgDisable);
		this->SetCANCELSensitivity(CATDlgDisable);
		this->SetHELPSensitivity(CATDlgDisable);
	}
	if (strNameArray.GetSize() == 1)
	{
		ReviewModel(strNameArray.GetAt(0));
		this->SetOKSensitivity(CATDlgDisable);
		this->SetCANCELSensitivity(CATDlgDisable);
		this->SetHELPSensitivity(CATDlgDisable);
	}
	if(strNameArray.GetSize() > 1)
	{
		Number--;
		ReviewModel(strNameArray.GetAt(Number));
		if (Number <= 1)
		{
			this->SetOKSensitivity(CATDlgDisable);
		}
		if (Number >= 2)
		{
			this->SetOKSensitivity(CATDlgEnable);
		}
		this->SetCANCELSensitivity(CATDlgEnable);
	}
}

