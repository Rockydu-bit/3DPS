// COPYRIGHT Dassault Systemes 2015
//===================================================================
//
// CDlgFigureReview.cpp
// The dialog : CDlgFigureReview
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Oct 2015  Creation: Code generated by the CAA wizard  WANGJIAPENG
//===================================================================
#include "CDlgFigureReview.h"
#include "CATApplicationFrame.h"
#include "CATDlgGridConstraints.h"
#include "CATMsgCatalog.h"
#include "CATI3DCompass.h"
#include "CATFrmLayout.h"
#include "CATFrmWindow.h"
#include "CATIASpecsAndGeomWindow.h"
#include "CATViewer.h"
#include "CATIAViewer.h"
#include "CATIxPDMItem.h"
#include "CATFrmEditor.h"
#include "CAT2DViewer.h"
#include "CAT2DRep.h"
#include "CATPrintFileImage.h"
#include "CATPrintParameters.h"
#include "CATPrint2DRep.h"
#include "shlwapi.h"

#pragma comment(lib,"Shlwapi.lib")

#ifdef CDlgFigureReview_ParameterEditorInclude
#include "CATIParameterEditorFactory.h"
#include "CATIParameterEditor.h"
#include "CATICkeParm.h"
#endif



CDlgFigureReview* CDlgFigureReview::m_pFigureReview = NULL;
//-------------------------------------------------------------------------
// Constructor
//-------------------------------------------------------------------------
CDlgFigureReview::CDlgFigureReview() :
  CATDlgDialog ((CATApplicationFrame::GetApplicationFrame())->GetMainWindow(),
//CAA2 WIZARD CONSTRUCTOR DECLARATION SECTION
"CDlgFigureReview",CATDlgWndBtnOKCancelPreview|CATDlgGridLayout
//END CAA2 WIZARD CONSTRUCTOR DECLARATION SECTION
                               )
{
//CAA2 WIZARD CONSTRUCTOR INITIALIZATION SECTION
 _Frame001 = NULL;
//END CAA2 WIZARD CONSTRUCTOR INITIALIZATION SECTION
 _pFile = new CATFile();
 Count = 0;
 Number = 0;
 strNameArray.RemoveAll();
 strPathArray.RemoveAll();
 _pRepImage = NULL;
 flag = false;
}

//-------------------------------------------------------------------------
// Destructor
//-------------------------------------------------------------------------
CDlgFigureReview::~CDlgFigureReview()
{
//  Do not delete the control elements of your dialog: 
//     this is done automatically
//  --------------------------------------------------
//CAA2 WIZARD DESTRUCTOR DECLARATION SECTION
 _Frame001 = NULL;
//END CAA2 WIZARD DESTRUCTOR DECLARATION SECTION
 if (_pFile)
 {
	 delete _pFile;
	 _pFile;
 }
}

CDlgFigureReview* CDlgFigureReview::GetInstance()
{
	if (m_pFigureReview == NULL)
	{
		m_pFigureReview = new CDlgFigureReview();
	}
	return m_pFigureReview;//返回唯一的指针
}

void CDlgFigureReview::Build()
{
//  TODO: This call builds your dialog from the layout declaration file
//  -------------------------------------------------------------------

//CAA2 WIZARD WIDGET CONSTRUCTION SECTION
 SetGridRowResizable(0,1);
 SetGridColumnResizable(0,1);
 _Frame001 = new CATDlgFrame(this, "Frame001", CATDlgFraNoFrame|CATDlgGridLayout);
_Frame001 -> SetGridConstraints(0, 0, 1, 1, CATGRID_4SIDES);
//END CAA2 WIZARD WIDGET CONSTRUCTION SECTION
//修改窗体位置和大小
CATDlgWindow *pFrmWindow = NULL;
pFrmWindow = (CATApplicationFrame::GetApplicationFrame())->GetApplicationDocument();
DRECT rect;
pFrmWindow->GetRectDimensions(&rect);
int width = 750;
int height = 450;
this->SetRectDimensions(rect.dx-width,(rect.dy-height)/2,height,width);
//CAA2 WIZARD CALLBACK DECLARATION SECTION
     AddAnalyseNotificationCB (this, 
                               GetWindCloseNotification(),
                               (CATCommandMethod)&CDlgFigureReview::OnCDlgFigureReviewDiaCLOSENotification,
                               NULL);
     AddAnalyseNotificationCB (this, 
                               GetDiaPREVIEWNotification(),
                               (CATCommandMethod)&CDlgFigureReview::OnCDlgFigureReviewDiaPREVIEWNotification,
                               NULL);
     AddAnalyseNotificationCB (this, 
                               GetDiaCANCELNotification(),
                               (CATCommandMethod)&CDlgFigureReview::OnCDlgFigureReviewDiaCANCELNotification,
                               NULL);
     AddAnalyseNotificationCB (this, 
                               GetDiaOKNotification(),
                               (CATCommandMethod)&CDlgFigureReview::OnCDlgFigureReviewDiaOKNotification,
                               NULL);
//END CAA2 WIZARD CALLBACK DECLARATION SECTION

}

CATViewer* CDlgFigureReview::GetCurrentViewer()
{
	HRESULT rc=S_OK;
	CATViewer *pViewer;
	CATFrmEditor* pEditor = CATFrmEditor::GetCurrentEditor();
	//获取当前视角
	CATBaseUnknown *p3DCompass = pEditor->GetCompass();
	CATI3DCompass_var sp3DCompass = p3DCompass;
	if (sp3DCompass != NULL_var)
	{
		CATFrmLayout *pFrmLay = CATFrmLayout::GetCurrentLayout();
		CATFrmWindow *pFrmWin = pFrmLay->GetCurrentWindow();
		CATIASpecsAndGeomWindow_var spGeoWindowVB = pFrmWin;
		spGeoWindowVB->put_Layout(catWindowGeomOnly);
		pViewer = pFrmWin->GetViewer();
	}

	return pViewer;
}

CString CDlgFigureReview::InterceptCurrentView(CString string)
{
	HRESULT rc=S_OK;
	CString strContent;
	CATViewer *pViewer = GetCurrentViewer();
	//改变当前视图
	float ofWidthbefore = 0;
	float ofHeightbefore = 0;
	float ofWidthafter = 750;
	float ofHeightafter = 450;
	pViewer->GetGraphicSize(&ofWidthbefore,&ofHeightbefore);
	pViewer->Resize(ofWidthafter,ofHeightafter);
	//获取当前图片的名称
	CString strPath = _pFile->GetProgramPath();
	strPath = strPath + _T("\\Settings.txt");
	CStdioFile fifFile(strPath,CFile::modeRead);
	fifFile.ReadString(strContent);
	fifFile.Close();
	strContent = strContent + _T("\\Picture\\") + string;
	if (!PathFileExists(strContent))
	{
		::CreateDirectory(strContent,NULL);
	}
	CString strFile = strContent + _T("\\*.bmp");
	CStringArray strNameArray;
	CStringArray strPathArray;
	int count = _pFile->GetFileCount(strFile,strPathArray,strNameArray);
	//BMP图片生成
	strContent.Format(_T("%s\\%s_%d.bmp"),strContent,string,count+1);
	CATIAViewer *pViewerVB = NULL;
	rc = pViewer->QueryInterface(IID_CATIAViewer,(void**)&pViewerVB);
	if (SUCCEEDED(rc)&&pViewerVB != NULL)
	{
		const CATBSTR bstrText = ::SysAllocString(strContent);
		rc = pViewerVB->CaptureToFile(catCaptureFormatBMP,bstrText);
		pViewerVB->Release();
		pViewerVB = NULL;
	}
	pViewer->Resize(ofWidthbefore,ofHeightbefore);
	AfxMessageBox(_T("成功创建工序附图！"));

	return strContent;
}

CATBoolean CDlgFigureReview::CheckProcessFigure(CString strName)
{
	CString strContent;
	CString strPath = _pFile->GetProgramPath();
	strPath = strPath + _T("\\Settings.txt");
	CStdioFile fifFile(strPath,CFile::modeRead);
	fifFile.ReadString(strContent);
	fifFile.Close();
	//以上获取当前工程的目录
	strFilePath = strContent + _T("\\Picture\\") + strName;
	if (!PathFileExists(strContent))
	{
		AfxMessageBox(_T("请先保存工序模型！"));
		return FALSE;
	}
	CString string = strFilePath + _T("\\*.bmp");
	Count = _pFile->GetFileCount(string,strPathArray,strNameArray);
	//以上获取当前文件夹下的模型数量
	if (Count == 0)
	{
		AfxMessageBox(_T("请先保存工序模型！"));
		return FALSE;
	}

	return TRUE;
}

CATBoolean CDlgFigureReview::ProcessFigureReview(CString strProcessName)
{
	if (!CheckProcessFigure(strProcessName))
	{
		return FALSE;
	}
	m_pFigureReview->Build();
	m_pFigureReview->SetVisibility(CATDlgShow);
	if (Count == 1)
	{
		this->SetOKSensitivity(CATDlgDisable);
		this->SetCANCELSensitivity(CATDlgDisable);
	}
	if (Count > 1)
	{
		this->SetOKSensitivity(CATDlgDisable);
		this->SetCANCELSensitivity(CATDlgEnable);
	}
	ReviewFigure(strNameArray.GetAt(0));

	return TRUE;
}

CATBoolean CDlgFigureReview::ReviewFigure(CString str)
{
	if (!flag)
	{
		_p2DViewer = new CAT2DViewer(_Frame001,"工序附图",CATDlgFraNoTitle,750,450);
		_p2DViewer->SetGridConstraints(0,0,1,1,CATGRID_4SIDES);
		_p2DViewer->SetBackgroundColor(0.8f,0.8f,0.8f);
		Attach4Sides(_p2DViewer);
		flag = true;
	}

	CString strTemp = strFilePath + _T("\\") + str;
	char *pch = _pFile->ConvertMultiByteToChar(strTemp);

	CATPrintFileImage *pImage = new CATPrintFileImage(pch,"BMP");
	CATPrintParameters Parameters;
	Parameters.SetMargins(0.f,0.f,0.f,0.f);
	CAT2DRep *pRep = NULL;
	pRep = new CATPrint2DRep(pImage,Parameters);
	pImage->Release();
	if (pRep)
	{
		if (NULL !=  _pRepImage)
		{
			_p2DViewer->RemoveRep(_pRepImage);
			_pRepImage -> Destroy();
		}
		_p2DViewer->AddRep(pRep);
		_p2DViewer->Reframe();
		_pRepImage = pRep;
	}

	return TRUE;
}

//-------------------------------------------------------------------------
// Callback on DiaOK of _CDlgFigureReview
//-------------------------------------------------------------------------
void CDlgFigureReview::OnCDlgFigureReviewDiaOKNotification(CATCommand* cmd, CATNotification* evt, CATCommandClientData data)
{
  // Add your code here
	Number--;
	ReviewFigure(strNameArray.GetAt(Number));
	if (Number <= 1)
	{
		this->SetOKSensitivity(CATDlgDisable);
	}
	if (Number >= 2)
	{
		this->SetOKSensitivity(CATDlgEnable);
	}
	this->SetCANCELSensitivity(CATDlgEnable);
}


//-------------------------------------------------------------------------
// Callback on DiaCANCEL of _CDlgFigureReview
//-------------------------------------------------------------------------
void CDlgFigureReview::OnCDlgFigureReviewDiaCANCELNotification(CATCommand* cmd, CATNotification* evt, CATCommandClientData data)
{
  // Add your code here
	Number++;
	ReviewFigure(strNameArray.GetAt(Number));
	if (Number < Count-1)
	{
		this->SetCANCELSensitivity(CATDlgEnable);
	}
	if (Number >= Count-1)
	{
		this->SetCANCELSensitivity(CATDlgDisable);
	}
	this->SetOKSensitivity(CATDlgEnable);
}


//-------------------------------------------------------------------------
// Callback on DiaPREVIEW of _CDlgFigureReview
//-------------------------------------------------------------------------
void CDlgFigureReview::OnCDlgFigureReviewDiaPREVIEWNotification(CATCommand* cmd, CATNotification* evt, CATCommandClientData data)
{
  // Add your code here
	_pFile->DeletePathFile(strPathArray.GetAt(Number));
	strNameArray.RemoveAt(Number);
	if (strNameArray.GetSize() == 0)
	{
		ReviewFigure(_T(""));
		this->SetOKSensitivity(CATDlgDisable);
		this->SetCANCELSensitivity(CATDlgDisable);
		this->SetHELPSensitivity(CATDlgDisable);
		this->SetPREVIEWSensitivity(CATDlgDisable);
	}
	if (strNameArray.GetSize() == 1)
	{
		ReviewFigure(strNameArray.GetAt(0));
		this->SetOKSensitivity(CATDlgDisable);
		this->SetCANCELSensitivity(CATDlgDisable);
		this->SetHELPSensitivity(CATDlgDisable);
	}
	if(strNameArray.GetSize() > 1)
	{
		Number--;
		ReviewFigure(strNameArray.GetAt(Number));
		if (Number <= 1)
		{
			this->SetOKSensitivity(CATDlgDisable);
		}
		if (Number >= 2)
		{
			this->SetOKSensitivity(CATDlgEnable);
		}
		this->SetCANCELSensitivity(CATDlgEnable);
	}
}


//-------------------------------------------------------------------------
// Callback on DiaCLOSE of _CDlgFigureReview
//-------------------------------------------------------------------------
void CDlgFigureReview::OnCDlgFigureReviewDiaCLOSENotification(CATCommand* cmd, CATNotification* evt, CATCommandClientData data)
{
  // Add your code here
	if (m_pFigureReview)
	{
		m_pFigureReview->RequestDelayedDestruction();
		m_pFigureReview = NULL;
	}
}

