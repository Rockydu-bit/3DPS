// COPYRIGHT Dassault Systemes 2015
//===================================================================
//
// OpenFileCmd.cpp
// The state chart based command: OpenFileCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Oct 2015  Creation: Code generated by the CAA wizard  WANGJIAPENG
//===================================================================
#include "OpenFileCmd.h"

#include "CATCreateExternalObject.h"
CATCreateClass( OpenFileCmd);


//-------------------------------------------------------------------------
// Constructor
//-------------------------------------------------------------------------
OpenFileCmd::OpenFileCmd() :
  CATStateCommand ("OpenFileCmd", CATDlgEngOneShot, CATCommandModeExclusive) 
//  Valid states are CATDlgEngOneShot and CATDlgEngRepeat
, pOkBut(NULL), pCancelBut(NULL), pCloseBut(NULL)
{
	pDlgOpenFile = new CDlgOpenFile();
	pDlgOpenFile->Build();
	pDlgOpenFile->SetVisibility(CATDlgShow);
}

//-------------------------------------------------------------------------
// Destructor
//-------------------------------------------------------------------------
OpenFileCmd::~OpenFileCmd()
{
	if (pOkBut != NULL)
	{
		pOkBut->RequestDelayedDestruction();
		pOkBut = NULL;
	}
	if (pCancelBut != NULL)
	{
		pCancelBut->RequestDelayedDestruction();
		pCancelBut = NULL;
	}
	if (pCloseBut != NULL)
	{
		pCloseBut->RequestDelayedDestruction();
		pCloseBut = NULL;
	}
	if (pDlgOpenFile != NULL) 
	{
		pDlgOpenFile->RequestDelayedDestruction();
		pDlgOpenFile = NULL;
	}
}

void OpenFileCmd::BuildGraph()
{
  // TODO: Define the StateChart 
  // ---------------------------
	pOkBut = new CATDialogAgent("OK");
	pCloseBut = new CATDialogAgent("Close");
	pCancelBut = new CATDialogAgent("Cancel");

	pOkBut->AcceptOnNotify(pDlgOpenFile,pDlgOpenFile->GetDiaOKNotification());
	pCancelBut->AcceptOnNotify(pDlgOpenFile,pDlgOpenFile->GetWindCloseNotification());
	pCloseBut->AcceptOnNotify(pDlgOpenFile,pDlgOpenFile->GetDiaCANCELNotification());

	CATDialogState* pState = GetInitialState("OK");
	pState->AddDialogAgent(pOkBut);
	pState->AddDialogAgent(pCloseBut);
	pState->AddDialogAgent(pCancelBut);

	AddTransition(pState,NULL,IsOutputSetCondition(pOkBut),Action((ActionMethod)&OpenFileCmd::ActionOK));
	AddTransition(pState,NULL,IsOutputSetCondition(pCloseBut),Action((ActionMethod)&OpenFileCmd::ActionClose));
	AddTransition(pState,NULL,IsOutputSetCondition(pCancelBut),Action((ActionMethod)&OpenFileCmd::ActionCancel));
}

CATBoolean OpenFileCmd::ActionOK( void *data )
{
	// TODO: Define the action associated with the transition 
	// ------------------------------------------------------
	pDlgOpenFile->SetCurrentActivePath();
	if (pDlgOpenFile)
	{
		pDlgOpenFile->RequestDelayedDestruction();
		pDlgOpenFile = NULL;
	}
	return TRUE;
}

CATBoolean OpenFileCmd::ActionCancel( void *data )
{
	// TODO: Define the action associated with the transition 
	// ------------------------------------------------------
	if (pDlgOpenFile)
	{
		pDlgOpenFile->RequestDelayedDestruction();
		pDlgOpenFile = NULL;
	}

	return TRUE;
}

CATBoolean OpenFileCmd::ActionClose( void *data )
{
	// TODO: Define the action associated with the transition 
	// ------------------------------------------------------
	if (pDlgOpenFile)
	{
		pDlgOpenFile->RequestDelayedDestruction();
		pDlgOpenFile = NULL;
	}

	return TRUE;
}

