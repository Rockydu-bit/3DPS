// COPYRIGHT Dassault Systemes 2015
//===================================================================
//
// FilmStarterCmd.cpp
// The state chart based command: FilmStarterCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Oct 2015  Creation: Code generated by the CAA wizard  WANGJIAPENG
//===================================================================
#include "FilmStarterCmd.h"

#include "CATCreateExternalObject.h"
CATCreateClass( FilmStarterCmd);


//-------------------------------------------------------------------------
// Constructor
//-------------------------------------------------------------------------
FilmStarterCmd::FilmStarterCmd() :
  CATStateCommand ("FilmStarterCmd", CATDlgEngOneShot, CATCommandModeExclusive) 
//  Valid states are CATDlgEngOneShot and CATDlgEngRepeat
{
}

//-------------------------------------------------------------------------
// Destructor
//-------------------------------------------------------------------------
FilmStarterCmd::~FilmStarterCmd()
{
}


//-------------------------------------------------------------------------
// BuildGraph()
//-------------------------------------------------------------------------
void FilmStarterCmd::BuildGraph()
{
	CString strPath = GetProgramPath();
	strPath = strPath + _T("\\Settings.txt");
	CStdioFile fifFile(strPath,CFile::modeRead);
	CString strContent;
	fifFile.ReadString(strContent);
	fifFile.Close();
	strContent = strContent + _T("\\DMPlayer") + _T("\\DMPlayer.exe");
	ShellExecute(NULL,_T("open"),strContent,NULL,NULL,SW_SHOWNORMAL);
}

CString FilmStarterCmd::GetProgramPath()
{
	TCHAR filename[_MAX_PATH+_MAX_FNAME];
	::GetModuleFileName(NULL,filename,sizeof(filename));
	CString strSldexeLoation(filename);
	CString strDirectory(strSldexeLoation.Left(strSldexeLoation.ReverseFind(_T('\\'))));
	strDirectory.FreeExtra();
	return strDirectory;
}
