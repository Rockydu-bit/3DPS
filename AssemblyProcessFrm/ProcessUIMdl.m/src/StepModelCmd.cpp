// COPYRIGHT Dassault Systemes 2015
//===================================================================
//
// StepModelCmd.cpp
// The state chart based command: StepModelCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Nov 2015  Creation: Code generated by the CAA wizard  WANGJIAPENG
//===================================================================
#include "StepModelCmd.h"

#include "CATCreateExternalObject.h"
CATCreateClass( StepModelCmd);


//-------------------------------------------------------------------------
// Constructor
//-------------------------------------------------------------------------
StepModelCmd::StepModelCmd() :
  CATStateCommand ("StepModelCmd", CATDlgEngOneShot, CATCommandModeExclusive) 
//  Valid states are CATDlgEngOneShot and CATDlgEngRepeat
, pCancelBut(NULL), pCloseBut(NULL)
{
	pDlgStepModel = new CDlgStepModel();
	pDlgStepModel->Build();
	pDlgStepModel->SetVisibility(CATDlgShow);
}

//-------------------------------------------------------------------------
// Destructor
//-------------------------------------------------------------------------
StepModelCmd::~StepModelCmd()
{
	if (pCancelBut != NULL)
	{
		pCancelBut->RequestDelayedDestruction();
		pCancelBut = NULL;
	}
	if (pCloseBut != NULL)
	{
		pCloseBut->RequestDelayedDestruction();
		pCloseBut = NULL;
	}
	if (pDlgStepModel != NULL) 
	{
		pDlgStepModel->RequestDelayedDestruction();
		pDlgStepModel = NULL;
	}
}


//-------------------------------------------------------------------------
// BuildGraph()
//-------------------------------------------------------------------------
void StepModelCmd::BuildGraph()
{
	pCloseBut = new CATDialogAgent("Close");
	pCancelBut = new CATDialogAgent("Cancel");

	pCancelBut->AcceptOnNotify(pDlgStepModel,pDlgStepModel->GetWindCloseNotification());
	pCloseBut->AcceptOnNotify(pDlgStepModel,pDlgStepModel->GetDiaCANCELNotification());

	CATDialogState* pState = GetInitialState("OK");
	pState->AddDialogAgent(pCloseBut);
	pState->AddDialogAgent(pCancelBut);

	AddTransition(pState,NULL,IsOutputSetCondition(pCloseBut),Action((ActionMethod)&StepModelCmd::ActionClose));
	AddTransition(pState,NULL,IsOutputSetCondition(pCancelBut),Action((ActionMethod)&StepModelCmd::ActionCancel));
}

CATBoolean StepModelCmd::ActionCancel( void *data )
{
	// TODO: Define the action associated with the transition 
	// ------------------------------------------------------
	if (pDlgStepModel)
	{
		pDlgStepModel->RequestDelayedDestruction();
		pDlgStepModel = NULL;
	}

	return TRUE;
}

CATBoolean StepModelCmd::ActionClose( void *data )
{
	// TODO: Define the action associated with the transition 
	// ------------------------------------------------------
	if (pDlgStepModel)
	{
		pDlgStepModel->RequestDelayedDestruction();
		pDlgStepModel = NULL;
	}

	return TRUE;
}
