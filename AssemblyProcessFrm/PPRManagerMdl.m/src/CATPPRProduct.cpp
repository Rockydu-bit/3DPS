// COPYRIGHT Dassault Systemes 2015
//===================================================================
//
// CATPPRProduct.cpp
// Header definition of CATPPRProduct
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Oct 2015  Creation: Code generated by the CAA wizard  WANGJIAPENG
//===================================================================
#include "CATPPRProduct.h"
#include "CATInit.h"
#include "CATISPPProcessContainer.h"
 
CATImplementClass( CATPPRProduct,
                   Implementation, 
                   CATPPRDocument,
                   CATNull );
 
//-----------------------------------------------------------------------------
// CATPPRProduct : constructor
//-----------------------------------------------------------------------------
CATPPRProduct::CATPPRProduct():
    CATPPRDocument()
{
}

//-----------------------------------------------------------------------------
// CATPPRProduct : destructor
//-----------------------------------------------------------------------------
CATPPRProduct::~CATPPRProduct()
{
}
 
//-----------------------------------------------------------------------------
// CATPPRProduct : copy constructor
//-----------------------------------------------------------------------------
CATPPRProduct::CATPPRProduct(CATPPRProduct& original):
   CATPPRDocument(original)
{
}
 
//-----------------------------------------------------------------------------
// CATPPRProduct : equal operator
//-----------------------------------------------------------------------------
CATPPRProduct& CATPPRProduct::operator=(CATPPRProduct& original)
{
   CATPPRDocument::operator=(original);
   return *this;
}

CATListValCATBaseUnknown_var * CATPPRProduct::GetPPRRootPointer(CATDocument *pProcessDoc)
{
	if (pProcessDoc == NULL)
	{
		return NULL;
	}

	HRESULT rc = E_FAIL;
	CATInit *piInitOnDoc = NULL;
	rc = pProcessDoc -> QueryInterface(IID_CATInit,(void**)&piInitOnDoc);
	if (FAILED(rc)) return NULL;
	CATISPPProcessContainer *piProcessCont = (CATISPPProcessContainer*)piInitOnDoc -> GetRootContainer("CATISPPProcessContainer");
	if ( NULL == piProcessCont) return NULL;
	piInitOnDoc -> Release();
	piInitOnDoc = NULL;

	CATListValCATBaseUnknown_var *pProductList = piProcessCont->GetProductContext();
	piProcessCont -> Release();
	piProcessCont = NULL;
	if ((NULL == pProductList) || ((*pProductList).Size() < 1))
	{ 
		if ((*pProductList).Size() > 0) delete pProductList;
		return NULL;
	}

	return pProductList;
}
