// COPYRIGHT Dassault Systemes 2010
//===================================================================
//
// CAAETreeNodeNavigElement.cpp
// Provide implementation to interface
//    CATINavigElement
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//  Feb 2010  Creation: Code generated by the CAA wizard  user
//===================================================================
#include "CAAETreeNodeNavigElement.h"

#include "CATNavigInstance.h"

#include "CATITreeNodeSelectStatus.h"

#include "CATITreeNodeEventPublisher.h"

 
CATImplementClass(CAAETreeNodeNavigElement,
                  DataExtension,
                  CATNodeExtension,
                  CATTreeNodeObj_node );
 

//-----------------------------------------------------------------------------
// CAAETreeNodeNavigElement : constructor
//-----------------------------------------------------------------------------
CAAETreeNodeNavigElement::CAAETreeNodeNavigElement():
    CATNodeExtension()
{
}

//-----------------------------------------------------------------------------
// CAAETreeNodeNavigElement : destructor
//-----------------------------------------------------------------------------
CAAETreeNodeNavigElement::~CAAETreeNodeNavigElement()
{
}
 
// Link the implementation to its interface
// ---------------------------------------



//TIE or TIEchain definitions
#include "TIE_CATINavigElement.h"
TIE_CATINavigElement( CAAETreeNodeNavigElement);


//Methods implementation

//-----------------------------------------------------------------------------
// Implements CATINavigElement::ProcessAfterSelect
//-----------------------------------------------------------------------------
void CAAETreeNodeNavigElement::ProcessAfterSelect ()
{
	HRESULT rc;

	CATNavigInstance * pNavigInstance = NULL;
	CATBaseUnknown_var pBaseUnknown = NULL_var;

	pNavigInstance = GetAssociatedInstance();

	pBaseUnknown = pNavigInstance -> GetReference();

	//CATITreeNodeSelectStatus * piTreeNodeSelectStatus = NULL;

	//rc = pBaseUnknown -> QueryInterface(IID_CATITreeNodeSelectStatus,(void**)&piTreeNodeSelectStatus);

	//rc = piTreeNodeSelectStatus -> SetSelectStatus(1);

	//Update();



	CATITreeNodeEventPublisher * piTreeNodeEventPublisher = NULL;

	rc = pBaseUnknown -> QueryInterface(IID_CATITreeNodeEventPublisher,(void**)&piTreeNodeEventPublisher);

	if (SUCCEEDED(rc))
	{
		piTreeNodeEventPublisher -> PublishTreeNodeSelectEvent();


		piTreeNodeEventPublisher -> Release();

		piTreeNodeEventPublisher = NULL;
	}


    return;
}

//-----------------------------------------------------------------------------
// Implements CATINavigElement::ProcessAfterExtSelect
//-----------------------------------------------------------------------------
//void CAAETreeNodeNavigElement::ProcessAfterExtSelect ()
//{
//
//   return;
//}

//-----------------------------------------------------------------------------
// Implements CATINavigElement::ProcessAfterAction
//-----------------------------------------------------------------------------
//void CAAETreeNodeNavigElement::ProcessAfterAction ()
//{
//
//   return;
//}

//-----------------------------------------------------------------------------
// Implements CATINavigElement::ProcessAfterExpand
//-----------------------------------------------------------------------------
//void CAAETreeNodeNavigElement::ProcessAfterExpand ()
//{
//
//   return;
//}

//-----------------------------------------------------------------------------
// Implements CATINavigElement::ProcessAfterMethod
//-----------------------------------------------------------------------------
void CAAETreeNodeNavigElement::ProcessAfterMethod ()
{
	HRESULT rc;

	CATNavigInstance * pNavigInstance = NULL;
	CATBaseUnknown_var pBaseUnknown = NULL_var;

	pNavigInstance = GetAssociatedInstance();

	pBaseUnknown = pNavigInstance -> GetReference();

	//CATITreeNodeSelectStatus * piTreeNodeSelectStatus = NULL;

	//rc = pBaseUnknown -> QueryInterface(IID_CATITreeNodeSelectStatus,(void**)&piTreeNodeSelectStatus);

	//int iTreeNodeStatus;
	//rc = piTreeNodeSelectStatus -> GetSelectStatus(&iTreeNodeStatus);

	//if (SUCCEEDED(rc))
	//{
	//	if (iTreeNodeStatus == 1)
	//	{
	//		CATITreeNodeEventPublisher * piTreeNodeEventPublisher = NULL;

	//		rc = pBaseUnknown -> QueryInterface(IID_CATITreeNodeEventPublisher,(void**)&piTreeNodeEventPublisher);

	//		if (SUCCEEDED(rc))
	//		{
	//			piTreeNodeEventPublisher -> PublishTreeNodeCxtMenuEvent();
	//		}
	//	}
	//}



	CATITreeNodeEventPublisher * piTreeNodeEventPublisher = NULL;

	rc = pBaseUnknown -> QueryInterface(IID_CATITreeNodeEventPublisher,(void**)&piTreeNodeEventPublisher);

	if (SUCCEEDED(rc))
	{
		piTreeNodeEventPublisher -> PublishTreeNodeCxtMenuEvent();

		piTreeNodeEventPublisher -> Release();

		piTreeNodeEventPublisher = NULL;
	}



	return;
}

//-----------------------------------------------------------------------------
// Implements CATINavigElement::GetFatherContainer
//-----------------------------------------------------------------------------
//CATINavigContainer* CAAETreeNodeNavigElement::GetFatherContainer ()
//{
//
//   return NULL;
//}

//-----------------------------------------------------------------------------
// Implements CATINavigElement::Update
//-----------------------------------------------------------------------------
//void CAAETreeNodeNavigElement::Update ()
//{
//
//   return;
//}

//-----------------------------------------------------------------------------
// Implements CATINavigElement::GetController
//-----------------------------------------------------------------------------
//const CATNavigController* CAAETreeNodeNavigElement::GetController ()
//{
//
//   return NULL;
//}

//-----------------------------------------------------------------------------
// Implements CATINavigElement::GetAssociatedInstance
//-----------------------------------------------------------------------------
//CATNavigInstance* CAAETreeNodeNavigElement::GetAssociatedInstance ()
//{
//
//   return NULL;
//}

//-----------------------------------------------------------------------------
// Implements CATINavigElement::Remove
//-----------------------------------------------------------------------------
//void CAAETreeNodeNavigElement::Remove (int  iIndex)
//{
//
//   return;
//}

//-----------------------------------------------------------------------------
// Implements CATINavigElement::SetMarked
//-----------------------------------------------------------------------------
//void CAAETreeNodeNavigElement::SetMarked (int  mark)
//{
//
//   return;
//}

//-----------------------------------------------------------------------------
// Implements CATINavigElement::GetMarked
//-----------------------------------------------------------------------------
//int CAAETreeNodeNavigElement::GetMarked ()
//{
//
//   return 0;
//}