// COPYRIGHT Dassault Systemes 2010
//===================================================================
//
// CAAETreeNodeNavigModify.cpp
// Provide implementation to interface
//    CATINavigModify
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//  Feb 2010  Creation: Code generated by the CAA wizard  user
//===================================================================
#include "CAAETreeNodeNavigModify.h"

#include "CATIGraphNode.h"

#include "CATITreeNodeSelectStatus.h"

#include "CATITreeNodeContent.h"

#include "CATINavigElement.h"

#include "CATNavigInstance.h"

 
CATImplementClass(CAAETreeNodeNavigModify,
                  DataExtension,
                  CATNodeExtension,
                  CATTreeNodeObj_node );
 

//-----------------------------------------------------------------------------
// CAAETreeNodeNavigModify : constructor
//-----------------------------------------------------------------------------
CAAETreeNodeNavigModify::CAAETreeNodeNavigModify():
    CATNodeExtension()
{
}

//-----------------------------------------------------------------------------
// CAAETreeNodeNavigModify : destructor
//-----------------------------------------------------------------------------
CAAETreeNodeNavigModify::~CAAETreeNodeNavigModify()
{
}
 
// Link the implementation to its interface
// ---------------------------------------



//TIE or TIEchain definitions
#include "TIE_CATINavigModify.h"
TIE_CATINavigModify( CAAETreeNodeNavigModify);


//Methods implementation

//-----------------------------------------------------------------------------
// Implements CATINavigModify::UpdateElem
//-----------------------------------------------------------------------------
void CAAETreeNodeNavigModify::UpdateElem (CATNavigInstance*  iInst)
{
	CATIGraphNode *piGraphNode = NULL  ;
	HRESULT rc = QueryInterface(IID_CATIGraphNode,(void**)&piGraphNode);



	CATNavigInstance * pNavigInstance = NULL;
	CATINavigElement * piNavigElement = NULL;
	CATBaseUnknown_var pBaseUnknown = NULL_var;

	rc = QueryInterface(IID_CATINavigElement,(void**)&piNavigElement);

	pNavigInstance = piNavigElement -> GetAssociatedInstance();

	pBaseUnknown = pNavigInstance -> GetReference();


	CATITreeNodeContent * piTreeNodeContent = NULL;

	rc = pBaseUnknown -> QueryInterface(IID_CATITreeNodeContent, (void**)&piTreeNodeContent);




	CATITreeNodeSelectStatus * piTreeNodeSelectStatus = NULL;

	rc = pBaseUnknown -> QueryInterface(IID_CATITreeNodeSelectStatus,(void**)&piTreeNodeSelectStatus);

	int iTreeNodeStatus;
	rc = piTreeNodeSelectStatus -> GetSelectStatus(&iTreeNodeStatus);


	if (SUCCEEDED(rc))
	{
		CATUnicodeString strIconName;
		rc = piTreeNodeContent -> GetIconName(strIconName);
		if ( strIconName.Compare("") != 2 )
		{
			piGraphNode->SetPixelImage(strIconName);
		}

		if (iTreeNodeStatus == 0)
		{
			piGraphNode->SetFillStyle(0);
			piGraphNode->SetDecoration(0);
			piGraphNode->SetShadowOut(0);
			piGraphNode->SetUnderlineMode(0);
		}
		else if (iTreeNodeStatus == 1)
		{
			piGraphNode->SetFillStyle(1);
			piGraphNode->SetDecoration(1);
			piGraphNode->SetShadowOut(0);
			//piGraphNode->SetColor(50);
			piGraphNode->SetUnderlineMode(0);
		}
	}



   piTreeNodeContent -> Release();
   piTreeNodeContent = NULL;



   piTreeNodeSelectStatus -> Release();
   piTreeNodeSelectStatus = NULL;


   piNavigElement -> Release();
   piNavigElement = NULL;


   piGraphNode -> Release();
   piGraphNode = NULL;


   return;
}

//-----------------------------------------------------------------------------
// Implements CATINavigModify::ModifyShortHelp
//-----------------------------------------------------------------------------
HRESULT CAAETreeNodeNavigModify::ModifyShortHelp (CATUnicodeString&  ioText)
{

   return S_OK;
}

//-----------------------------------------------------------------------------
// Implements CATINavigModify::Select
//-----------------------------------------------------------------------------
//void CAAETreeNodeNavigModify::Select (int  iMode)
//{
//
//   return;
//}

//-----------------------------------------------------------------------------
// Implements CATINavigModify::IsSelected
//-----------------------------------------------------------------------------
//int CAAETreeNodeNavigModify::IsSelected ()
//{
//
//   return 0;
//}
