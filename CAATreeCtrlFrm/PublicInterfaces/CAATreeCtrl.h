// COPYRIGHT Dassault Systemes 2010
//===================================================================
//
// CAATreeCtrl.h
// Header definition of CAATreeCtrl
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Feb 2010  Creation: Code generated by the CAA wizard  user
//===================================================================
#ifndef CAATreeCtrl_H
#define CAATreeCtrl_H

#include "ktTreeCtrlModule.h"
#include "CATDlgContainer.h"

#include "CATNavigBox.h"

#include "CATListOfCATBaseUnknown.h"

class CAATreeNodeEventAgent;

class ExportedByktTreeCtrlModule CAATreeCtrl: public CATDlgContainer
{
  CATDeclareClass;

  public:

  // Standard constructors and destructors
  // -------------------------------------
     CAATreeCtrl (CATDialog*  iParent,const CATString& iObjectName, CATDlgStyle iStyle = NULL);
     virtual ~CAATreeCtrl ();

  // Copy constructor and equal operator
  // -----------------------------------
  CAATreeCtrl (CAATreeCtrl &);
  CAATreeCtrl& operator=(CAATreeCtrl&);

  //获得当前所选择的节点
  void GetSelectedTreeNode (CATBaseUnknown ** pSelectedTreeNode);

  //使树控件上一个节点置为选择状态
  void SelectTreeNode (CATBaseUnknown * pTreeNode);


  //得到在树节点上所设置的关联数据
  void GetTreeNodeData(CATBaseUnknown * pTreeNode, int oContent);

  //设置树节点上的关联数据
  void SetTreeNodeData(CATBaseUnknown * pTreeNode, int iContent);

  //得到树节点的右键弹出菜单
  CATDlgContextualMenu * GetTreeNodeContextualMenu(CATBaseUnknown * pTreeNode);


  //得到树节点上显示的文本
  void GetTreeNodeText(CATBaseUnknown * pTreeNode, CATUnicodeString & oName);

  //设置树节点上显示的文本
  void SetTreeNodeText(CATBaseUnknown * pTreeNode, const CATUnicodeString & iName);


  //为树控件添加一个根节点
  void AddRootTreeNode(CATBaseUnknown * pTreeRootNode);

  void AddRootTreeNode(CATUnicodeString TreeNodeText, CATUnicodeString TreeNodeIcon);


  //为树控件添加节点的子节点
  void AddChildTreeNode(CATBaseUnknown * pFatherTreeNode, CATBaseUnknown * pChildTreeNodeToAdd);

  CATBaseUnknown* AddChildTreeNode(CATBaseUnknown * pFatherTreeNode, CATUnicodeString TextOfChildTreeNodeToAdd, CATUnicodeString TreeNodeIcon);


  //在树控件上移除一个树节点
  void RemoveTreeNode(CATBaseUnknown * pTreeNode);

  //移除树控件上所有节点
  void RemoveAllTreeNode(CATLISTP(CATBaseUnknown) * pRootTreeNodeObjList);

  //得到在根节点级上序号为iTreeNodeRank的根节点
  void GetRootTreeNodeAt(int iTreeNodeRank, CATBaseUnknown **  opTreeNodeObject);

  //得到在根节点级上某节点的序号
  void GetCertainRootTreeNodeLocate(int &oTreeNodeRank, CATBaseUnknown *ipTreeNodeObject);

  //得到在pFatherTreeNode级下序号为iTreeNodeRank的节点
  void GetChildTreeNodeAt(CATBaseUnknown * pFatherTreeNode, int iTreeNodeRank, CATBaseUnknown **  opTreeNodeObject);

  //得到在pFatherTreeNode级下某节点的序号
  void GetCertainChildTreeNodeLocate(CATBaseUnknown * pFatherTreeNode, int &oTreeNodeRank, CATBaseUnknown * ipTreeNodeObject);

  //得到在pTreeNode节点的父节点
  void GetFatherTreeNode(CATBaseUnknown * pTreeNode, CATBaseUnknown ** opFatherTreeNode);

  //得到在pTreeNode节点的下一个兄弟节点
  void GetNextSiblingTreeNode(CATBaseUnknown * pTreeNode, CATBaseUnknown **opSiblingTreeNode);

  //得到在pTreeNode节点的上一个兄弟节点
  void GetPrevSiblingTreeNode(CATBaseUnknown * pTreeNode, CATBaseUnknown **opSiblingTreeNode);

  //得到在pTreeNode节点下子节点数量
  void GetChildTreeNodeCount(CATBaseUnknown * pTreeNode, int * oCount);

  //得到树控件的所有根节点数量
  void GetRootTreeNodeCount(int * oCount);

  //展开一个节点
  void ExpandTreeNode (CATBaseUnknown * pTreeNode);



private:

  void OnTreeCtrlReSizeCB(CATCommand* cmd, CATNotification* evt, CATCommandClientData data);

  void OnTreeNodeSelectCB(CATCallbackEvent event, void * client, CATNotification * iNotification,
						CATSubscriberData data, CATCallback callback);

  void OnTreeNodeCxtMenuCB(CATCallbackEvent event, void * client, CATNotification * iNotification,
						CATSubscriberData data, CATCallback callback);


public:
	//CATIA CAA树的显示框
	CATNavigBox * _pNavigBox;

	//所有树节点的事件代理，用于树节点与控件的通讯
	CAATreeNodeEventAgent * _pTreeEventListener;

	//树控件的根节点指针列表
	CATLISTP(CATBaseUnknown) * _pRootTreeNodeObjList;

	//树控件的所有节点指针列表
	CATLISTP(CATBaseUnknown) * _pAllTreeNodeObjList;

};

//-----------------------------------------------------------------------

#endif